diff --git a/config/gitlab.yml.example b/config/gitlab.yml.example
index f2f05b3..0670112 100644
--- a/config/gitlab.yml.example
+++ b/config/gitlab.yml.example
@@ -502,7 +502,7 @@ production: &base
   # Gitaly settings
   gitaly:
     # Path to the directory containing Gitaly client executables.
-    client_path: /home/git/gitaly/bin
+    client_path: /usr/bin
     # Default Gitaly authentication token. Can be overriden per storage. Can
     # be left blank when Gitaly is running locally on a Unix socket, which
     # is the normal way to deploy Gitaly.
@@ -520,8 +520,8 @@ production: &base
     # real path not the symlink.
     storages: # You must have at least a `default` storage path.
       default:
-        path: /home/git/repositories/
-        gitaly_address: unix:/home/git/gitlab/tmp/sockets/private/gitaly.socket # TCP connections are supported too (e.g. tcp://host:port)
+        path: /var/lib/git/repositories/
+        gitaly_address: unix:/run/gitlab/gitaly.socket # TCP connections are supported too (e.g. tcp://host:port)
         # gitaly_token: 'special token' # Optional: override global gitaly.token for this storage.
 
   ## Backup settings
@@ -549,12 +549,12 @@ production: &base
 
   ## GitLab Shell settings
   gitlab_shell:
-    path: /home/git/gitlab-shell/
-    hooks_path: /home/git/gitlab-shell/hooks/
+    path: /usr/share/gitlab-shell/
+    hooks_path: /usr/share/gitlab-shell/hooks/
 
     # File that contains the secret key for verifying access for gitlab-shell.
     # Default is '.gitlab_shell_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_shell_secret
+    secret_file: /opt/gitlab/.gitlab_shell_secret
 
     # Git over HTTP
     upload_pack: true
@@ -569,7 +569,7 @@ production: &base
   workhorse:
     # File that contains the secret key for verifying access for gitlab-workhorse.
     # Default is '.gitlab_workhorse_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_workhorse_secret
+    # secret_file: /opt/gitlab/.gitlab_workhorse_secret
 
   ## Git settings
   # CAUTION!
@@ -667,8 +667,8 @@ test:
   backup:
     path: tmp/tests/backups
   gitlab_shell:
-    path: tmp/tests/gitlab-shell/
-    hooks_path: tmp/tests/gitlab-shell/hooks/
+    path: /usr/share/gitlab-shell/
+    hooks_path: /usr/share/gitlab-shell/hooks/
   issues_tracker:
     redmine:
       title: "Redmine"
diff --git a/config/unicorn.rb.example b/config/unicorn.rb.example
index cc10da2..3c80d44 100644
--- a/config/unicorn.rb.example
+++ b/config/unicorn.rb.example
@@ -33,12 +33,12 @@ worker_processes 3
 
 # Help ensure your application will always spawn in the symlinked
 # "current" directory that Capistrano sets up.
-working_directory "/home/git/gitlab" # available in 0.94.0+
+working_directory "/opt/gitlab" # available in 0.94.0+
 
 # Listen on both a Unix domain socket and a TCP port.
 # If you are load-balancing multiple Unicorn masters, lower the backlog
 # setting to e.g. 64 for faster failover.
-listen "/home/git/gitlab/tmp/sockets/gitlab.socket", :backlog => 1024
+listen "/run/gitlab/gitlab.socket", :backlog => 1024
 listen "127.0.0.1:8080", :tcp_nopush => true
 
 # nuke workers after 30 seconds instead of 60 seconds (the default)
@@ -59,13 +59,13 @@ listen "127.0.0.1:8080", :tcp_nopush => true
 timeout 60
 
 # feel free to point this anywhere accessible on the filesystem
-pid "/home/git/gitlab/tmp/pids/unicorn.pid"
+pid "/run/gitlab/pids/unicorn.pid"
 
 # By default, the Unicorn logger will write to stderr.
 # Additionally, some applications/frameworks log to stderr or stdout,
 # so prevent them from going to /dev/null when daemonized here:
-stderr_path "/home/git/gitlab/log/unicorn.stderr.log"
-stdout_path "/home/git/gitlab/log/unicorn.stdout.log"
+stderr_path "/var/log/gitlab/unicorn.stderr.log"
+stdout_path "/var/log/gitlab/unicorn.stdout.log"
 
 # combine Ruby 2.0.0dev or REE with "preload_app true" for memory savings
 # http://rubyenterpriseedition.com/faq.html#adapt_apps_for_cow
